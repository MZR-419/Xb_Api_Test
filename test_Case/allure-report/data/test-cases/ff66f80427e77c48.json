{
  "uid" : "ff66f80427e77c48",
  "name" : "test_gettoken[data1]",
  "fullName" : "test_Case.test_aa#test_gettoken",
  "historyId" : "659db8571c23ea8768689039718e6fa0",
  "time" : {
    "start" : 1624882278360,
    "stop" : 1624882278361,
    "duration" : 1
  },
  "status" : "broken",
  "statusMessage" : "UnboundLocalError: local variable 'datas' referenced before assignment",
  "statusTrace" : "data = {'是否开启': '否', '期望结果': None, '状态码': None, '用例名称': '单笔发放', ...}\nget_token = 'eyJhbGciOiJIUzUxMiJ9.eyJhdXRob3JpdGllcyI6WyJiYXNpYyJdLCJhdHRyaWJ1dGVzIjp7Im5hbWUiOiIwNzAy5rWL6K-VIiwiYmF0Y2hUeXBlIjoi...jEzODgiLCJleHAiOjE2MjUxNDE0Nzh9.Yn1K-pZ-LqMbyV0GYA4PUH2Af67NMZogclcfgru8QFqWC-ONDZ29VmEG0kZrVJc3895-XcaXXJcosp5_DieSPw'\n\n    @pytest.mark.parametrize('data',ExcelMethod(file,excel_sheet).get_case())\n    def test_gettoken(data,get_token):\n        orderno = random_phone()\n        #配置文件的IP与Excel文档请求路径进行拼接\n        urls = test_url+data[ExcelVarles.case_url]\n        #Excel读取出来的请求参数转为字典\n        data1 = str(data[ExcelVarles.case_data])\n        if '${orderNo}' in data1:\n            new_data = json.loads(data1.replace('${orderNo}',orderno))\n            print(new_data)\n        #前置加密处理\n            datas = encryptJson.EncryptJson.encryptJson(passkey,new_data)\n        # print(type(datas))\n    \n        if data[ExcelVarles.case_method] == 'get':\n            r = Method.ApiRequest().run_method(\n                method='get',\n                url=data[ExcelVarles.case_url],\n                data=datas,\n                # headers=headers\n            )\n    \n        elif data[ExcelVarles.case_method] == 'post':\n            header = {\n                'Authorization': 'Bearer '+ get_token}\n            d = ApiRequest()\n            r = d.run_method(\n                method='post',\n                url=urls,\n>               data=datas,\n                header=header\n            )\nE           UnboundLocalError: local variable 'datas' referenced before assignment\n\ntest_aa.py:44: UnboundLocalError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_token",
    "time" : {
      "start" : 1624882278060,
      "stop" : 1624882278221,
      "duration" : 161
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_Case"
  }, {
    "name" : "suite",
    "value" : "test_aa"
  }, {
    "name" : "host",
    "value" : "mozhenraodeMacBook-Air.local"
  }, {
    "name" : "thread",
    "value" : "43777-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_Case.test_aa"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'是否开启': '否', '用例名称': '单笔发放', '请求方式': 'post', '请求地址': '/trans/upload', '请求数据': '{\"datas\":[{\"acctName\":\"莫振饶\",\"acctNo\":\"6214832072174308\",\"amount\":0.2,\"cardNo\":\"440183199504196756\",\"mobile\":\"13480213228\",\"orderNo\":\"98989878787867\",\"papersType\":\"ID_CARD\",\"pmtType\":\"PAYMENT\",\"remark\":\"测试Test\",\"riskControl\":\"\"}],\"cmd\":\"\",\"notifyUrls\":\"http://localhost:8483/notify\",\"level\":\"\"}', '状态码': None, '期望结果': None}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ff66f80427e77c48.json",
  "parameterValues" : [ "{'是否开启': '否', '用例名称': '单笔发放', '请求方式': 'post', '请求地址': '/trans/upload', '请求数据': '{\"datas\":[{\"acctName\":\"莫振饶\",\"acctNo\":\"6214832072174308\",\"amount\":0.2,\"cardNo\":\"440183199504196756\",\"mobile\":\"13480213228\",\"orderNo\":\"98989878787867\",\"papersType\":\"ID_CARD\",\"pmtType\":\"PAYMENT\",\"remark\":\"测试Test\",\"riskControl\":\"\"}],\"cmd\":\"\",\"notifyUrls\":\"http://localhost:8483/notify\",\"level\":\"\"}', '状态码': None, '期望结果': None}" ]
}